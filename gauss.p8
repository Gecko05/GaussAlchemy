pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- gauss alchemy
-- puzzle game inspired by gauss jordan

local sx0 = 60
local sy0 = 40
local tx0 = 3*16
local wh = 5

local matrix = {}
local debug = 1
local mini = -2
local maxi = 2
local dbmatrix = {{0,-1, -1},{1, 2, 1},{2, 2, -2}}
local nrows = 3
local sprinc = 32
local initialstate = 1
local sel = {n = 0, state = initialstate}
local factor = 1
local drow = nil
---------------------------- r o w s -------------------------
row = {n = 0, gems = 0, state = 0, flag = 0}
-- n - num of row
-- gems - table with gems
-- state : 0 duplicate, 1 in matrix, 2 transmutation
function row:new (n, gems, state, flag)
    self.__index = self
    o = {}
    o.n = n
    o.gems = gems
    o.state = state
    o.flag = flag
    return setmetatable(o, self)
end

function row:draw()
    for i = 0, nrows-1 do
        local dx = (i %3) * 16
        if self.state == 2 then
            dx = dx + tx0
        elseif self.state == 0 then
            dx = dx - tx0
        end
        local dy = (self.n - 1) * 17
        local x0 = sx0 + dx
        local y0 = sy0 + dy
        local sprgem = (self.gems[i+1] + 2) * 32
        spr(sprgem, x0, y0, 2, 2)
        --rect(x0, y0, x0+wh, y0+wh, -self.gems[i+1]+10)
    end
end

function drawsel()
    local w = 48
    local h = 16
    local margin = 2
    local y0 = (sel.n*(h + 1)) + sy0 - margin
    local x0 = sx0 - margin
    if sel.state == 0 then
        x0 = x0 - tx0
    elseif sel.state == 2 then
        x0 = x0 + tx0
    end
    rect(x0, y0, x0 + w, y0 + h, 7)
end
---------------------------- d r a w -------------------------
function drawmatrix()  
    for i = 1, nrows do
        matrix[i]:draw()
    end
end

function drawduplicate()
    if drow ~= nil then
        drow:draw()
    end
end

function _draw()
 cls(0)
 drawmatrix()
 drawduplicate()
 drawsel()
end
---------------------------- i n i t ------------------------
function _init()
    for i = 1, nrows do
        if debug == 1 then
        local newrow = row:new(i, dbmatrix[i], initialstate)
        add(matrix, newrow)
        end
    end
end
---------------------------- u p d a t e --------------------
function clonetable(t)
    x = {}
    for k, v in pairs(t) do
        add(x, v)
    end
    return x
end

function duplicaterow(r)
    newgems = clonetable(r.gems)
    drow = row:new(r.n, newgems, 0, r.n)
end

function addrows(r)
    if r.n ~= drow.flag then
        for i = 1,nrows do
            local gem1 = matrix[r.n].gems[i]
            local gem2 = drow.gems[i]
            if gem1 ~= gem2 then
                gem1 = gem1 + gem2
            end
            -- control overflow
            if gem1 > maxi then
                gem1 = mini
            elseif gem1 < mini then
                gem1 = maxi
            end
            matrix[r.n].gems[i] = gem1
        end
    end
end

-- d - 1 to the right
-- d - 0 to the left
function moverow(d)
    local r = matrix[sel.n+1]
    if d == 1 and sel.state == 0 then
        addrows(r)
        drow = nil    
        sel.state = 1
    elseif d == 0 and sel.state > 1 then
        r.state = r.state - 1
        sel.state = r.state
    elseif d == 0 and sel.state == 1 then
        duplicaterow(r)
        drow.state = 0
        sel.state = drow.state
    end
end

function transmuterow()
    if sel.state == 1 then
        for i=1, nrows do
            local rowg = matrix[sel.n + 1].gems
            local gem = rowg[i]
            gem = gem + factor
            if gem < mini then
                gem = maxi
            elseif gem > maxi then
                gem = mini
            end
            matrix[sel.n + 1].gems[i] = gem
        end
    elseif sel.state == 0 then
        for i=1, nrows do
            local rowg = drow.gems
            local gem = rowg[i]
            gem = gem + factor
            if gem < mini then
                gem = maxi
            elseif gem > maxi then
                gem = mini
            end
            drow.gems[i] = gem
        end
    end
end

function processup()
    if sel.n > 0 and sel.state == 1 then
        sel.n = sel.n - 1
    elseif sel.state == 0 and sel.n > 0 then -- duplicate and add
        sel.n = sel.n - 1
        drow.n = sel.n + 1
    end
end

function processdown()
    if sel.n < 2 and sel.state == 1 then
        sel.n = sel.n + 1
    elseif sel.state == 0 and sel.n < 2 then
        sel.n = sel.n + 1
        drow.n = sel.n + 1
    end
end

function _update()
 if btnp(4) then
  transmuterow()
 elseif btnp(3) then
  processdown()
 elseif btnp(2) then
  processup()
 elseif btnp(1) then
  moverow(1)
 elseif btnp(0) then
  moverow(0)
 end
end
__gfx__
00000060000000000000006000000000000000600000000000000060000000000000006000000000000000600000000000000000000000000000000000000000
0000066c000000000000076c000000000000076c000000000000067c000000000000066600000000000006660000000000000000000000000000000000000000
0000766cc00000000000766cc00000000000776cc00000000000767cc000000000007666600000000000766c6000000060000000000000000000000000000000
0007767ccc0000000007767ccc0000000007777ccc0000000007767ccc00000000077676660000000007767cc6000000c6000000000000000000000000000000
007767c6ccc00000007767c6ccc00000007777c6ccc0000000776776ccc00000007767c766600000007767c6cc600000cc600000000000000000000000000000
06667ccc6ccc000007667ccc6ccc000007777ccc6ccc0000066677776ccc000006667ccc7666000006667ccc6cc600006cc60000000000000000000000000000
6667cccccc1110007667cccccc1110007777cccccc1110006677777776ccc0006667ccccc66660006667cccccc11c000cc11c000000000000000000000000000
0ccc6cccc111000006cc6cccc111000007666cccc11100000ccc67776c1100000ccc6ccc6cc600000ccc6cccc11c0000c11c0000000000000000000000000000
00ccc6cc11100000006cc6cc11100000007666cc1110000000ccc676c110000000ccc6c6cc60000000ccc6cc11c000001c000000000000000000000000000000
000cccc1110000000006ccc111000000000766c111000000000ccc6c11000000000ccc6cc6000000000cccc11c000000c0000000000000000000000000000000
0000cc111000000000006c111000000000006611100000000000cc61100000000000cc6cc00000000000cc11c000000000000000000000000000000000000000
00000c110000000000000c1100000000000006110000000000000c610000000000000c6c0000000000000c1c0000000000000000000000000000000000000000
00000010000000000000001000000000000000100000000000000010000000000000006000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000b000000000000000b000000000000000b000000000000000b000000000000000b000000000000000b00000000000000000000000000000000000000000
00000bb300000000000007b300000000000007b30000000000000b730000000000000bbb0000000000000bbb0000000000000000000000000000000000000000
00007bb33000000000007bb330000000000077b33000000000007b733000000000007bbbb000000000007bb3b000000000000000000000000000000000000000
00077b733300000000077b7333000000000777733300000000077b733300000000077b7bbb00000000077b733b00000000000000000000000000000000000000
0077b73b333000000077b73b333000000077773b333000000077b77b333000000077b737bbb000000077b73b33b0000000000000000000000000000000000000
0bbb7333b333000007bb7333b333000007777333b33300000bbb7777b33300000bbb73337bbb00000bbb7333b33b000000000000000000000000000000000000
bbb73333331110007bb73333331110007777333333111000bb7777777b333000bbb733333bbbb000bbb733333311300000000000000000000000000000000000
0333b333311100000b33b3333111000007bbb333311100000333b777b31100000333b333b33b00000333b3333113000011c00000000000000000000000000000
00333b331110000000b33b3311100000007bbb331110000000333b7b3110000000333b3b33b0000000333b331130000000000000000000000000000000000000
0003333111000000000b3331110000000007bb3111000000000333b311000000000333b33b000000000333311300000000000000000000000000000000000000
00003311100000000000b311100000000000bb1110000000000033b110000000000033b330000000000033113000000000000000000000000000000000000000
0000031100000000000003110000000000000b1100000000000003b100000000000003b300000000000003130000000000000000000000000000000000000000
0000001000000000000000100000000000000010000000000000001000000000000000b000000000000000100000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000a000000000000000a000000000000000a000000000000000a000000000000000a000000000000000a00000000000000000000000000000000000000000
00000aa900000000000007a900000000000007a90000000000000a790000000000000aaa0000000000000aaa0000000000000000000000000000000000000000
00007aa99000000000007aa990000000000077a99000000000007a799000000000007aaaa000000000007aa9a000000000000000000000000000000000000000
00077a799900000000077a7999000000000777799900000000077a799900000000077a7aaa00000000077a799a00000000000000000000000000000000000000
0077a79a999000000077a79a999000000077779a999000000077a77a999000000077a797aaa000000077a79a99a0000000000000000000000000000000000000
0aaa7999a999000007aa7999a999000007777999a99900000aaa7777a99900000aaa79997aaa00000aaa7999a99a000000000000000000000000000000000000
aaa79999994440007aa79999994440007777999999444000aa7777777a999000aaa799999aaaa000aaa799999944900000000000000000000000000000000000
0999a999944400000a99a9999444000007aaa999944400000999a777a94400000999a999a99a00000999a9999449000000000000000000000000000000000000
00999a994440000000a99a9944400000007aaa994440000000999a7a9440000000999a9a99a0000000999a994490000000000000000000000000000000000000
0009999444000000000a9994440000000007aa9444000000000999a944000000000999a99a000000000999944900000000000000000000000000000000000000
00009944400000000000a944400000000000aa4440000000000099a440000000000099a990000000000099449000000000000000000000000000000000000000
0000094400000000000009440000000000000a4400000000000009a400000000000009a900000000000009490000000000000000000000000000000000000000
0000004000000000000000400000000000000040000000000000004000000000000000a000000000000000400000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000e000000000000000e000000000000000e000000000000000e000000000000000e000000000000000e00000000000000000000000000000000000000000
00000ee800000000000007e800000000000007e80000000000000e780000000000000eee0000000000000eee0000000000000000000000000000000000000000
00007ee88000000000007ee880000000000077e88000000000007e788000000000007eeee000000000007ee8e000000000000000000000000000000000000000
00077e788800000000077e7888000000000777788800000000077e788800000000077e7eee00000000077e788e00000000000000000000000000000000000000
0077e78e888000000077e78e888000000077778e888000000077e77e888000000077e787eee000000077e78e88e0000000000000000000000000000000000000
0eee7888e888000007ee7888e888000007777888e88800000eee7777e88800000eee78887eee00000eee7888e88e000000000000000000000000000000000000
eee78888882220007ee78888882220007777888888222000ee7777777e888000eee788888eeee000eee788888822800000000000000000000000000000000000
0888e888822200000e88e8888222000007eee888822200000888e777e82200000888e888e88e00000888e8888228000000000000000000000000000000000000
00888e882220000000e88e8822200000007eee882220000000888e7e8220000000888e8e88e0000000888e882280000000000000000000000000000000000000
0008888222000000000e8882220000000007ee8222000000000888e822000000000888e88e000000000888822800000000000000000000000000000000000000
00008822200000000000e822200000000000ee2220000000000088e220000000000088e880000000000088228000000000000000000000000000000000000000
0000082200000000000008220000000000000e2200000000000008e200000000000008e800000000000008280000000000000000000000000000000000000000
0000002000000000000000200000000000000020000000000000002000000000000000e000000000000000200000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000060000000000000006000000000000000600000000000000060000000000000006000000000000000600000000000000000000000000000000000000000
00000665000000000000076500000000000007650000000000000675000000000000066600000000000006660000000000000000000000000000000000000000
00007665500000000000766550000000000077655000000000007675500000000000766660000000000076656000000000000000000000000000000000000000
00077675550000000007767555000000000777755500000000077675550000000007767666000000000776755600000000000000000000000000000000000000
00776756555000000077675655500000007777565550000000776776555000000077675766600000007767565560000000000000000000000000000000000000
06667555655500000766755565550000077775556555000006667777655500000666755576660000066675556556000000000000000000000000000000000000
66675555551110007667555555111000777755555511100066777777765550006667555556666000666755555511500000000000000000000000000000000000
05556555511100000655655551110000076665555111000005556777651100000555655565560000055565555115000000000000000000000000000000000000
00555655111000000065565511100000007666551110000000555676511000000055565655600000005556551150000000000000000000000000000000000000
00055551110000000006555111000000000766511100000000055565110000000005556556000000000555511500000000000000000000000000000000000000
00005511100000000000651110000000000066111000000000005561100000000000556550000000000055115000000000000000000000000000000000000000
00000511000000000000051100000000000006110000000000000561000000000000056500000000000005150000000000000000000000000000000000000000
00000010000000000000001000000000000000100000000000000010000000000000006000000000000000100000000000000000000000000000000000000000
